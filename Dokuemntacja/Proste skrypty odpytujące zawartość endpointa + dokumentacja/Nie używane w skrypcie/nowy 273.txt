https://docs.dataforseo.com/v3/keywords_data/clickstream_data/bulk_search_volume/live/?bash

ðŸ“¦ Endpoint: /v3/keywords_data/clickstream_data/bulk_search_volume/live
ðŸŽ¯ Cel: Pobranie danych search volume opartych na clickstream (do 1000 fraz na raz)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“¥ DANE WEJÅšCIOWE (POST)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Field                  | Typ       | Opis
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€|-----------|--------------------------------------------------
keywords[]            | array     | âœ… Lista fraz (wymagane, max: 1000, min. 3 znaki)
location_code         | integer   | âœ… Kod lokalizacji (np. 2840 = UK)
location_name         | string    | alternatywa dla location_code (jeden z dwÃ³ch wymagany)
tag                   | string    | opcjonalnie: etykieta uÅ¼ytkownika (max 255 znakÃ³w)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“¤ DANE ZWRACANE (RESPONSE)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Pole JSON             | Typ       | Opis
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€|-----------|--------------------------------------------------
version               | string    | Wersja API
status_code           | integer   | Status ogÃ³lny zapytania (np. 20000 = OK)
status_message        | string    | Komunikat statusu (np. "OK")
time                  | string    | Czas wykonania zadania (np. "0.38 sec")
cost                  | float     | Koszt zapytania w USD
tasks_count           | integer   | Liczba zadaÅ„ (1)
tasks_error           | integer   | Liczba bÅ‚Ä™dnych zadaÅ„ (0 jeÅ›li ok)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
tasks[].result[].items[] â†’ zawiera dane dla kaÅ¼dej frazy
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
keyword               | string    | FrazÌ‡a kluczowa (zdekodowana)
search_volume         | integer   | Åšredni miesiÄ™czny wolumen wyszukiwaÅ„ (clickstream)
monthly_searches[]    | array     | Dane z ostatnich 12 miesiÄ™cy (maksimum)
 â””â”€ year              | integer   | Rok (np. 2024)
 â””â”€ month             | integer   | MiesiÄ…c (1â€“12)
 â””â”€ search_volume     | integer   | Wolumen dla danego miesiÄ…ca

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“Œ UWAGI I OGRANICZENIA
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
â€¢ Max: 1000 fraz w jednym zapytaniu
â€¢ Brak CPC, konkurencji, SERP â€“ tylko wolumen (clickstream)
â€¢ Wolumen oparty na zachowaniach uÅ¼ytkownikÃ³w, NIE Google Ads
â€¢ clickstream_volume != search_volume z Google Ads â†’ mogÄ… siÄ™ znacznie rÃ³Å¼niÄ‡
â€¢ NiektÃ³re znaki zabronione w frazach (np. emoji)
â€¢ MoÅ¼liwe null lub brak danych dla bardzo niszowych fraz

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ’¡ PRZYDATNE DLA UI / ANALITYKI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
â€¢ Dobry do alternatywnych danych wolumenowych (niezaleÅ¼nych od Google Ads)
â€¢ MoÅ¼liwoÅ›Ä‡ porÃ³wnania z danymi Ads (jeÅ›li pobierasz oba)
â€¢ UÅ¼yj `tag`, by Å›ledziÄ‡ kto/co wysÅ‚aÅ‚o zapytanie (jeÅ›li API masz w aplikacji)
â€¢ Warto cacheâ€™owaÄ‡ â€” clickstream nie zmienia siÄ™ czÄ™sto

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€


=========================================
ðŸ“˜ Informacje dodatkowe â€“ Endpoint:
clickstream_data/bulk_search_volume/live
=========================================

Max fraz: 
    MoÅ¼na przesÅ‚aÄ‡ do 1000 sÅ‚Ã³w kluczowych w jednej paczce.
    OpÅ‚ata liczona za caÅ‚e zapytanie, niezaleÅ¼nie od liczby fraz.

Wymagane pole:
    location_code LUB location_name â€“ jedno z nich musi byÄ‡ podane.

Brak pola language_code:
    JÄ™zyk nie jest brany pod uwagÄ™ â€“ tylko lokalizacja wpÅ‚ywa na dane.

Minimalna dÅ‚ugoÅ›Ä‡ sÅ‚owa:
    KaÅ¼de sÅ‚owo musi mieÄ‡ min. 3 znaki â€“ krÃ³tsze frazy zostanÄ… pominiÄ™te.

Niedozwolone znaki:
    Nie moÅ¼na uÅ¼ywaÄ‡ znakÃ³w specjalnych (emoji, symbole Unicode, matematyczne itd.)

Å¹rÃ³dÅ‚o danych:
    Dane pochodzÄ… z clickstreamu, a nie z Google Ads â€“ to dane szacowane na podstawie rzeczywistych zachowaÅ„ uÅ¼ytkownikÃ³w.

ZawartoÅ›Ä‡ odpowiedzi:
    Tylko: search_volume (Å›rednia) i monthly_searches (historia 12 mies.)

Brak dodatkowych metryk:
    Endpoint nie zawiera danych CPC, konkurencji, SERP ani backlinkÃ³w.

Zakres czasowy:
    Zwracana historia obejmuje ostatnie 12 miesiÄ™cy â€“ brak obsÅ‚ugi `date_from` i `date_to`.

RÃ³Å¼nice wzglÄ™dem danych Google Ads:
    Clickstream search_volume moÅ¼e znaczÄ…co rÃ³Å¼niÄ‡ siÄ™ od danych z Google Ads API (czasem niÅ¼sze, czasem wyÅ¼sze).

Zastosowanie:
    Dobry do badania popularnoÅ›ci realnej (behawioralnej) na bazie ruchu uÅ¼ytkownikÃ³w, nie tylko planowania kampanii pÅ‚atnych.

---------



Bulk Clickstream Search Volume API - 0.010100$

PoniÅ¼ej masz peÅ‚ny gotowy kod analyze_keywords.py, ktÃ³ry:

uÅ¼ywa endpointu:
/v3/keywords_data/clickstream_data/bulk_search_volume/live

zwraca wszystkie dane .to_dict()

dziaÅ‚a z Twoim obecnym FastAPI bez zmian w reszcie projektu

âœ… SKOPIUJ I WSTAW DO app/api/analyze_keywords.py:
python
Kopiuj
Edytuj
import os
from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from dotenv import load_dotenv
from dataforseo_client import configuration as dfs_config, api_client as dfs_api_provider
from dataforseo_client.api.keywords_data_api import KeywordsDataApi
from dataforseo_client.models.keywords_data_clickstream_data_bulk_search_volume_live_request_info import KeywordsDataClickstreamDataBulkSearchVolumeLiveRequestInfo

load_dotenv()

router = APIRouter()

# Wczytanie danych z .env
DFS_LOGIN = os.getenv("DATAFORSEO_LOGIN")
DFS_PASSWORD = os.getenv("DATAFORSEO_PASSWORD")

# Model danych wejÅ›ciowych
class KeywordInput(BaseModel):
    keyword: str
    language: str
    country: str

@router.post("/analyze")
async def analyze_keyword(data: KeywordInput):
    if not all([DFS_LOGIN, DFS_PASSWORD]):
        raise HTTPException(status_code=500, detail="Brak danych logowania do API DataForSEO.")

    config = dfs_config.Configuration(username=DFS_LOGIN, password=DFS_PASSWORD)

    # Przygotowanie danych â€“ na razie na sztywno PL / Polska
    request_data = [
        KeywordsDataClickstreamDataBulkSearchVolumeLiveRequestInfo(
            keywords=[data.keyword],
            language_code="pl",
            location_code=2616  # Polska
        )
    ]

    with dfs_api_provider.ApiClient(config) as client:
        api_instance = KeywordsDataApi(client)

        try:
            api_response = api_instance.clickstream_data_bulk_search_volume_live(request_data)
            result = api_response.tasks[0].result[0]
            return result.to_dict()

        except Exception as e:
            raise HTTPException(status_code=500, detail=str(e))
			
			
			
********
********

Bulk Clickstream Search Volume API.

PoniÅ¼ej masz peÅ‚ny gotowy kod analyze_keywords.py, ktÃ³ry:

uÅ¼ywa endpointu:
/v3/keywords_data/clickstream_data/bulk_search_volume/live

zwraca wszystkie dane .to_dict()

dziaÅ‚a z Twoim obecnym FastAPI bez zmian w reszcie projektu

âœ… SKOPIUJ I WSTAW DO app/api/analyze_keywords.py:
python
Kopiuj
Edytuj
import os
from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from dotenv import load_dotenv
from dataforseo_client import configuration as dfs_config, api_client as dfs_api_provider
from dataforseo_client.api.keywords_data_api import KeywordsDataApi
from dataforseo_client.models.keywords_data_clickstream_data_bulk_search_volume_live_request_info import KeywordsDataClickstreamDataBulkSearchVolumeLiveRequestInfo

load_dotenv()

router = APIRouter()

# Wczytanie danych z .env
DFS_LOGIN = os.getenv("DATAFORSEO_LOGIN")
DFS_PASSWORD = os.getenv("DATAFORSEO_PASSWORD")

# Model danych wejÅ›ciowych
class KeywordInput(BaseModel):
    keyword: str
    language: str
    country: str

@router.post("/analyze")
async def analyze_keyword(data: KeywordInput):
    if not all([DFS_LOGIN, DFS_PASSWORD]):
        raise HTTPException(status_code=500, detail="Brak danych logowania do API DataForSEO.")

    config = dfs_config.Configuration(username=DFS_LOGIN, password=DFS_PASSWORD)

    # Przygotowanie danych â€“ na razie na sztywno PL / Polska
    request_data = [
        KeywordsDataClickstreamDataBulkSearchVolumeLiveRequestInfo(
            keywords=[data.keyword],
            language_code="pl",
            location_code=2616  # Polska
        )
    ]

    with dfs_api_provider.ApiClient(config) as client:
        api_instance = KeywordsDataApi(client)

        try:
            api_response = api_instance.clickstream_data_bulk_search_volume_live(request_data)
            result = api_response.tasks[0].result[0]
            return result.to_dict()

        except Exception as e:
            raise HTTPException(status_code=500, detail=str(e))
			
			
			
*****
*****

{
  "location_code": 2616,
  "items_count": 1,
  "items": [
    {
      "keyword": "grzegrzÃ³Å‚ka",
      "search_volume": 2368,
      "monthly_searches": [
        {
          "year": 2025,
          "month": 4,
          "search_volume": 2368
        },
        {
          "year": 2025,
          "month": 3,
          "search_volume": 2862
        },
        {
          "year": 2025,
          "month": 2,
          "search_volume": 3454
        },
        {
          "year": 2025,
          "month": 1,
          "search_volume": 3454
        },
        {
          "year": 2024,
          "month": 12,
          "search_volume": 3947
        },
        {
          "year": 2024,
          "month": 11,
          "search_volume": 4046
        },
        {
          "year": 2024,
          "month": 10,
          "search_volume": 4638
        },
        {
          "year": 2024,
          "month": 9,
          "search_volume": 4441
        },
        {
          "year": 2024,
          "month": 8,
          "search_volume": 4540
        },
        {
          "year": 2024,
          "month": 7,
          "search_volume": 4638
        },
        {
          "year": 2024,
          "month": 6,
          "search_volume": 4638
        },
        {
          "year": 2024,
          "month": 5,
          "search_volume": 4441
        }
      ]
    }
  ]
}